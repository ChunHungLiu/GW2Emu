/*
 * This code was autogenerated by
 * GameRevision.GW2Emu.CodeWriter.
 * Date generated: 22-07-13
 */

using System;
using System.IO;
using System.Net;
using GameRevision.GW2Emu.Common;
using GameRevision.GW2Emu.Common.Math;
using GameRevision.GW2Emu.Common.Messaging;
using GameRevision.GW2Emu.Common.Serialization;
using GameRevision.GW2Emu.Common.Session;

namespace GameRevision.GW2Emu.GameServer.Messages.CtoS
{
    public class P136_UnknownMessage : IMessage
    {
        public int Unknown0;
        public struct Struct1
        {
            public int Unknown2;
            public byte Unknown3;
            
            public void Serialize(Serializer serializer) {}
            public void Deserialize(Deserializer deserializer)
            {
                this.Unknown2 = deserializer.ReadVarint();
                this.Unknown3 = deserializer.ReadByte();
            }
        }
        public Struct1[] Unknown4;
        
        public ushort Header
        {
            get
            {
                return 136;
            }
        }
        
        public ISession Owner {  get;  set; }
        
        public void Serialize(Serializer serializer) {}
        public void Deserialize(Deserializer deserializer)
        {
            this.Unknown0 = deserializer.ReadVarint();
            byte unknown4Length = deserializer.ReadByte();
            if (unknown4Length > 31)
            {
                throw new InvalidDataException();
            }
            Unknown4 = new Struct1[unknown4Length];
            for (int i = 0; i < Unknown4.Length; i++)
            {
                Unknown4[i] = new Struct1();
            }
        }
    }
}
