/*
 * This code was autogenerated by
 * GameRevision.GW2Emu.CodeWriter.
 * Date generated: 08-07-13
 */

using System;
using System.IO;
using System.Net;
using GameRevision.GW2Emu.Core;
using GameRevision.GW2Emu.Core.Types;
using GameRevision.GW2Emu.Core.Serializers;

namespace GameRevision.GW2Emu.Messages.GameServer.StoC
{
    public class P453_UnknownMessage : GenericMessage
    {
        public int Unknown0;
        public int Unknown1;
        public struct Struct2
        {
            public string Unknown3;
            public int Unknown4;
            public struct Struct5
            {
                public int Unknown6;
                public byte Unknown7;
                public string Unknown8;
                public Vector2 Unknown9;
                
                public void Serialize(Serializer serializer)
                {
                    serializer.WriteVarint(this.Unknown6);
                    serializer.Write(this.Unknown7);
                    serializer.WriteUtf16String(this.Unknown8);
                    serializer.WriteVector2(this.Unknown9);
                }
            }
            public Struct5[] Unknown10;
            
            public void Serialize(Serializer serializer)
            {
                serializer.WriteUtf16String(this.Unknown3);
                serializer.WriteVarint(this.Unknown4);
                serializer.Write((byte)Unknown10.Length);
                for (int i = 0; i < Unknown10.Length; i++)
                {
                    Unknown10[i].Serialize(serializer);
                }
            }
        }
        public Struct2[] Unknown11;
        public short[] Unknown12;
        
        public override ushort Header
        {
            get
            {
                return 453;
            }
        }
        
        public override void Serialize(Serializer serializer)
        {
            base.Serialize(serializer);
            serializer.WriteVarint(this.Unknown0);
            serializer.WriteVarint(this.Unknown1);
            serializer.Write((byte)Unknown11.Length);
            for (int i = 0; i < Unknown11.Length; i++)
            {
                Unknown11[i].Serialize(serializer);
            }
            serializer.Write((byte)Unknown12.Length);
            for (int i = 0; i < Unknown12.Length; i++)
            {
                serializer.Write(Unknown12[i]);
            }
        }
    }
}
