/*
 * This code was autogenerated by
 * GameRevision.GW2Emu.CodeWriter.
 * Date generated: 08-07-13
 */

using System;
using System.IO;
using System.Net;
using GameRevision.GW2Emu.Core;
using GameRevision.GW2Emu.Core.Types;
using GameRevision.GW2Emu.Core.Serializers;

namespace GameRevision.GW2Emu.Messages.GameServer.StoC
{
    public class P015_UnknownMessage : GenericMessage
    {
        public short Unknown0;
        public int Unknown1;
        public byte Unknown2;
        public int Unknown3;
        public byte[] Unknown4;
        public byte Unknown5;
        public int Unknown6;
        public byte Unknown7;
        public byte Unknown8;
        public Optional<long> Unknown9;
        public Vector4 Unknown10;
        public int Unknown11;
        public struct Struct12
        {
            public float Unknown13;
            public float Unknown14;
            public float Unknown15;
            public float Unknown16;
            
            public void Serialize(Serializer serializer)
            {
                serializer.Write(this.Unknown13);
                serializer.Write(this.Unknown14);
                serializer.Write(this.Unknown15);
                serializer.Write(this.Unknown16);
            }
        }
        public Optional<Struct12> Unknown17;
        public Optional<long> Unknown18;
        public Optional<long> Unknown19;
        public struct Struct20
        {
            public float Unknown21;
            public float Unknown22;
            
            public void Serialize(Serializer serializer)
            {
                serializer.Write(this.Unknown21);
                serializer.Write(this.Unknown22);
            }
        }
        public Optional<Struct20> Unknown23;
        public string Unknown24;
        public Optional<float> Unknown25;
        
        public override ushort Header
        {
            get
            {
                return 15;
            }
        }
        
        public override void Serialize(Serializer serializer)
        {
            base.Serialize(serializer);
            serializer.Write(this.Unknown0);
            serializer.WriteVarint(this.Unknown1);
            serializer.Write(this.Unknown2);
            serializer.WriteVarint(this.Unknown3);
            serializer.Write((byte)Unknown4.Length);
            for (int i = 0; i < Unknown4.Length; i++)
            {
                serializer.Write(Unknown4[i]);
            }
            serializer.Write(this.Unknown5);
            serializer.WriteVarint(this.Unknown6);
            serializer.Write(this.Unknown7);
            serializer.Write(this.Unknown8);
            if (this.Unknown9.IsPresent)
            {
                serializer.Write(this.Unknown9.Value);
            }
            serializer.WriteVector4(this.Unknown10);
            serializer.WriteVarint(this.Unknown11);
            if (this.Unknown17.IsPresent)
            {
                this.Unknown17.Value.Serialize(serializer);
            }
            if (this.Unknown18.IsPresent)
            {
                serializer.Write(this.Unknown18.Value);
            }
            if (this.Unknown19.IsPresent)
            {
                serializer.Write(this.Unknown19.Value);
            }
            if (this.Unknown23.IsPresent)
            {
                this.Unknown23.Value.Serialize(serializer);
            }
            serializer.WriteUtf16String(this.Unknown24);
            if (this.Unknown25.IsPresent)
            {
                serializer.Write(this.Unknown25.Value);
            }
        }
    }
}
